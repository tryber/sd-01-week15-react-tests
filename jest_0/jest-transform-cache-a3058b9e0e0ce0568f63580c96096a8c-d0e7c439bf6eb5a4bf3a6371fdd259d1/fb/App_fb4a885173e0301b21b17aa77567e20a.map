{"version":3,"sources":["App.js"],"names":["App","Component","setIsPokemonFavoriteById","favoritePokemonIds","isPokemonFavorite","pokemons","reduce","acc","pokemon","id","includes","constructor","props","state","isPokemonFavoriteById","onUpdateFavoritePokemons","pokemonId","isFavorite","setState","renderPokedex","renderPokemonDetails","match","renderRoutes","favoritePokemons","filter","About","NotFound","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\n\nimport {\n  About,\n  FavoritePokemons,\n  NotFound,\n  Pokedex,\n  PokemonDetails,\n} from './components';\n\nimport {\n  readFavoritePokemonIds,\n  updateFavoritePokemons,\n} from './services/pokedexService';\n\nimport pokemons from './data';\n\nimport './App.css';\n\nclass App extends Component {\n  static setIsPokemonFavoriteById() {\n    const favoritePokemonIds = readFavoritePokemonIds();\n    const isPokemonFavorite = pokemons.reduce((acc, pokemon) => {\n      acc[pokemon.id] = favoritePokemonIds.includes(pokemon.id);\n      return acc;\n    }, {});\n\n    return isPokemonFavorite;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = { isPokemonFavoriteById: App.setIsPokemonFavoriteById() };\n  }\n\n  onUpdateFavoritePokemons(pokemonId, isFavorite) {\n    updateFavoritePokemons(pokemonId, isFavorite);\n\n    this.setState(({ isPokemonFavoriteById: App.setIsPokemonFavoriteById() }));\n  }\n\n  renderPokedex() {\n    const { isPokemonFavoriteById } = this.state;\n\n    return (\n      <Pokedex\n        pokemons={pokemons}\n        isPokemonFavoriteById={isPokemonFavoriteById}\n      />\n    );\n  }\n\n  renderPokemonDetails(match) {\n    const { isPokemonFavoriteById } = this.state;\n\n    return (\n      <PokemonDetails\n        isPokemonFavoriteById={isPokemonFavoriteById}\n        match={match}\n        pokemons={pokemons}\n        onUpdateFavoritePokemons={(pokemonId, isFavorite) => (\n          this.onUpdateFavoritePokemons(pokemonId, isFavorite)\n        )}\n      />\n    );\n  }\n\n  renderRoutes() {\n    const { isPokemonFavoriteById } = this.state;\n    const favoritePokemons = pokemons.filter(({ id }) => isPokemonFavoriteById[id]);\n\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={({ match }) => this.renderPokedex(match)}\n        />\n        <Route\n          path=\"/pokemons/:id\"\n          render={({ match }) => this.renderPokemonDetails(match)}\n        />\n        <Route path=\"/favorites\" render={() => <FavoritePokemons pokemons={favoritePokemons} />} />\n        <Route path=\"/about\" component={About} />\n        <Route component={NotFound} />\n      </Switch>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Pokédex</h1>\n        <nav>\n          <Link className=\"link\" to=\"/\">Home</Link>\n          <Link className=\"link\" to=\"/about\">About</Link>\n          <Link className=\"link\" to=\"/favorites\">Favorite Pokémons</Link>\n        </nav>\n        {this.renderRoutes()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]}