{"version":3,"sources":["PokemonDetails.js"],"names":["PokemonDetails","React","Component","renderHabitat","foundAt","name","map","location","renderSummary","summary","constructor","props","renderFavoriteInput","bind","findPokemon","givenId","pokemons","find","id","pokemonId","isFavorite","onUpdateFavoritePokemons","target","checked","render","match","params","isPokemonFavoriteById","pokemon","parseInt","propTypes","isPokemonFavoriteByIdType","isRequired","PropTypes","shape","string","func","arrayOf","pokemonType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport Pokemon from './Pokemon';\n\nimport './pokemon-details.css';\n\nclass PokemonDetails extends React.Component {\n  static renderHabitat({ foundAt, name }) {\n    return (\n      <section>\n        <h2>{`Game Locations of ${name}`}</h2>\n        <div className=\"pokemon-habitat\">\n          {foundAt.map(({ location, map }) => (\n            <div key={location}>\n              <img src={map} alt={`${name} location`} />\n              <p>\n                <em>{location}</em>\n              </p>\n            </div>\n          ))}\n        </div>\n      </section>\n    );\n  }\n\n  static renderSummary({ summary }) {\n    return (\n      <section>\n        <h2> Summary </h2>\n        <p>{summary}</p>\n      </section>\n    );\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.renderFavoriteInput = this.renderFavoriteInput.bind(this);\n  }\n\n  findPokemon(givenId) {\n    const { pokemons } = this.props;\n\n    return pokemons.find(({ id }) => id === givenId);\n  }\n\n  renderFavoriteInput(pokemonId, isFavorite) {\n    const { onUpdateFavoritePokemons } = this.props;\n    return (\n      <form className=\"favorite-form\">\n        <label htmlFor=\"favorite\">\n          Pok√©mon favoritado?\n          <input\n            type=\"checkbox\"\n            id=\"favorite\"\n            checked={isFavorite}\n            onChange={({ target: { checked } }) => onUpdateFavoritePokemons(pokemonId, checked)}\n          />\n        </label>\n      </form>\n    );\n  }\n\n  render() {\n    const { renderHabitat, renderSummary } = PokemonDetails;\n    const { renderFavoriteInput } = this;\n    const {\n      match: {\n        params: { id },\n      },\n      isPokemonFavoriteById,\n    } = this.props;\n\n    const pokemon = this.findPokemon(parseInt(id, 10));\n    const isFavorite = isPokemonFavoriteById[id];\n\n    return (\n      <section className=\"pokemon-details\">\n        <h2>{`${pokemon.name} Details`}</h2>\n        <Pokemon pokemon={pokemon} showDetailsLink={false} isFavorite={isFavorite} />\n        {renderSummary(pokemon)}\n        {renderHabitat(pokemon)}\n        {renderFavoriteInput(pokemon.id, isFavorite)}\n      </section>\n    );\n  }\n}\n\nPokemonDetails.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n  onUpdateFavoritePokemons: PropTypes.func.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired,\n};\n\nexport default PokemonDetails;\n"]}