{"version":3,"sources":["Pokedex.js"],"names":["Pokedex","React","Component","constructor","props","state","pokemonIndex","filteredType","filterPokemons","setState","nextPokemon","numberOfPokemons","fetchFilteredPokemons","pokemons","filter","pokemon","type","fetchPokemonTypes","Set","reduce","types","renderPokemonButtonsPanel","pokemonTypes","map","render","isPokemonFavoriteById","filteredPokemons","id","length","propTypes","isPokemonFavoriteByIdType","isRequired","PropTypes","arrayOf","pokemonType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isPokemonFavoriteByIdType, pokemonType } from '../types';\nimport Button from './Button';\nimport Pokemon from './Pokemon';\nimport './pokedex.css';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { pokemonIndex: 0, filteredType: 'all' };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({ filteredType, pokemonIndex: 0 });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState((state) => (\n      { pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons }\n    ));\n  }\n\n  fetchFilteredPokemons() {\n    const { pokemons } = this.props;\n    const { filteredType } = this.state;\n\n    return pokemons.filter((pokemon) => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const { pokemons } = this.props;\n\n    return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n  }\n\n  renderPokemonButtonsPanel() {\n    const pokemonTypes = this.fetchPokemonTypes();\n\n    return (\n      <div className=\"pokedex-buttons-panel\">\n        <Button\n          onClick={() => this.filterPokemons('all')}\n          className=\"filter-button\"\n        >\n          All\n        </Button>\n        {pokemonTypes.map((type) => (\n          <Button\n            key={type}\n            onClick={() => this.filterPokemons(type)}\n            className=\"filter-button\"\n          >\n            {type}\n          </Button>\n        ))}\n      </div>\n    );\n  }\n\n  render() {\n    const { isPokemonFavoriteById } = this.props;\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const { pokemonIndex } = this.state;\n    const pokemon = filteredPokemons[pokemonIndex];\n\n    return (\n      <div className=\"pokedex\">\n        <h2>Encountered pokémons</h2>\n        <Pokemon\n          pokemon={pokemon}\n          isFavorite={isPokemonFavoriteById[pokemon.id]}\n        />\n        {this.renderPokemonButtonsPanel()}\n        <Button\n          className=\"pokedex-button\"\n          onClick={() => this.nextPokemon(filteredPokemons.length)}\n          disabled={filteredPokemons.length <= 1}\n        >\n          Próximo pokémon\n        </Button>\n      </div>\n    );\n  }\n}\n\nPokedex.propTypes = {\n  isPokemonFavoriteById: isPokemonFavoriteByIdType.isRequired,\n  pokemons: PropTypes.arrayOf(pokemonType.isRequired).isRequired,\n};\n\nexport default Pokedex;\n"]}